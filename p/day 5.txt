PACKAGES

Practice 1

•	Create a package named MANAGE_EMP_PACK that has two public procedures, two package level variables and a private function. 
	The public procedure HIRE_EMP adds an employee record in EMPLOYEES table and
	 the public procedure FIRE_EMP deletes an employee record from the EMPLOYEES table. 
	The two variables v_insert_cnt and v_delete_cnt are used in the package, for keeping record of the numbers of times insert / delete has been executed. 
	Create a private function VALIDATE_EMP in the package to validate employee number.
	 This function can be called from HIRE_EMP and FIRE_EMP.
•	The function VALIDATE_EMP accepts an employee number in a parameter p_eno and returns TRUE 
        if the value of employee number exists in the EMPLOYEES table else it returns FALSE.
•	The procedure HIRE_EMP takes all the column values of the EMPLOYEES table as parameters.
      > It gives a call to VALIDATE_EMP by passing on the value of employee number and if the function returns TRUE 
          then it displays message> ‘Employee number already in use’. If the function returns FALSE 
         then it inserts a new record in the EMPLOYEES table and displays a message >‘One employee added’.
         It also increments the value of v_insert_cnt by 1.
•	The procedure FIRE_EMP accepts an employee number as a parameter and 
      >gives a call to VALIDATE_EMP by passing on the value of employee number. If the function returns TRUE 
         then it deletes the corresponding record from the EMPLOYEES table, displays message >‘One employee deleted’ and increments the value of v_delete_cnt by 1. 
        If the function returns FALSE
      > then it displays message >‘Wrong employee number’.
•	Check working of the methods in MANAGE_EMP_PACK by giving calls to the public procedures and by displaying value of the appropriate package variable, 
        through an anonymous block 

ANS:


create or replace package MANAGE_EMP_PACK
as

procedure HIRE_EMP(EMNO emp%rowtype);
procedure FIRE_EMP(ENO INT);
v_insert_cnt int;
v_delete_cnt int;
end;
/


create or replace package body MANAGE_EMP_PACK
is

	function VALIDATE_EMP(p_eno int)return boolean
	as 
	no int;
	emexist boolean;
	begin
		select empno into no from emp where empno=p_eno;
		if(no is not null)then
			emexist:=true;
		else 
			emexist:=false;
		end if;
	return emexist;
	end VALIDATE_EMP;

		procedure HIRE_EMP(EMNO emp%rowtype)
			as
			result boolean;
				begin
					v_insert_cnt:=0;
					result:=VALIDATE_EMP(EMNO.empno);
						if(result=true) then
							dbms_output.put_line('Employee number already in use');
						else
							insert into dummy values(EMNO.empno,EMNO.ENAME,EMNO.JOB,EMNO.MGR,EMNO.HIREDATE,EMNO.SAL,EMNO.COMM,EMNO.DEPTNO);
               						dbms_output.put_line('One employee added');
							v_insert_cnt:=v_insert_cnt+1;
							dbms_output.put_line(v_insert_cnt);
			
							end if;

					end HIRE_EMP;

		procedure FIRE_EMP(eno int)
			as
			result boolean;
				begin
					v_delete_cnt:=0;
					result:=VALIDATE_EMP(eno);
						if(result=true) then
							delete from dummy where empno=eno;
							dbms_output.put_line('One employee deleted');
							v_delete_cnt:=v_delete_cnt+1;
							dbms_output.put_line(v_delete_cnt);
						else
							dbms_output.put_line('Wrong employee number');
	 					end if;
				end FIRE_EMP;


end MANAGE_EMP_PACK;
/

To Execute:

declare
edata emp%rowtype;
begin
select * into edata from emp where empno=7900;
MANAGE_EMP_PACK.HIRE_EMP(edata);
end;
/

OR
declare
begin
MANAGE_EMP_PACK.FIRE_EMP(7900);

end;
/

----------------------------------------------------------------------------------------------------------------
Practice 2

•	Create a package named MY_EMP_PACK having two overloaded functions named GET_AVG_SAL. 
	The first function accepts first name as a parameter while the second function accepts employee_id as a parameter 
	and both return the average salary paid in the department to which the employee belongs. 
        Both the functions should handle the exception for non-existing employee by displaying an appropriate error message.
•	Give a call to GET_AVG_SAL through an anonymous PL/SQL block by passing on employee number 204. Do the same again by passing on employee name ‘Valli’.

ANS:
create or replace package MY_EMP_PACK
as
function GET_AVG_SAL(name varchar2) return number;
function GET_AVG_SAL(eno number) return number;
end MY_EMP_PACK;
/

create or replace package body MY_EMP_PACK
is

function GET_AVG_SAL(name varchar2) return number
as
asal int;
begin
select avg(sal) into asal from emp group by deptno having ename=name;
dbms_output.put_line('Avg salary for the dept of '||name||'is='||asal);
return asal;
exception
when no_data_found then
dbms_output.put_line('No such employee');
return 0;
when others then
dbms_output.put_line('Some other error occured');
return -1;
end GET_AVG_SAL;

function GET_AVG_SAL(eno number) return number
as
asal int;
begin
select avg(sal) into asal from emp group by deptno having empno=eno;
dbms_output.put_line('Avg salary for the dept of employee'||eno||'is='||asal);
return asal;
exception
when no_data_found then
dbms_output.put_line('No such employee');
return 0;
when others then
dbms_output.put_line('Some other error occured');
return -1;
end GET_AVG_SAL;

end MY_EMP_PACK;
/

To execute:

declare
begin
dbms_output.put_line(MY_EMP_PACK.GET_AVG_SAL(7900));
end;
/
declare
begin
dbms_output.put_line(MY_EMP_PACK.GET_AVG_SAL('JAMES'));
end;
/